// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: image_request_response_commands.proto

#include "image_request_response_commands.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

namespace ipc_interface {
class StoreImageRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<StoreImageRequest> _instance;
} _StoreImageRequest_default_instance_;
class StoreImageResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<StoreImageResponse> _instance;
} _StoreImageResponse_default_instance_;
class TemplateMatchRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<TemplateMatchRequest> _instance;
} _TemplateMatchRequest_default_instance_;
class TemplateMatchResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<TemplateMatchResponse> _instance;
} _TemplateMatchResponse_default_instance_;
}  // namespace ipc_interface
static void InitDefaultsStoreImageRequest_image_5frequest_5fresponse_5fcommands_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ipc_interface::_StoreImageRequest_default_instance_;
    new (ptr) ::ipc_interface::StoreImageRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ipc_interface::StoreImageRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_StoreImageRequest_image_5frequest_5fresponse_5fcommands_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsStoreImageRequest_image_5frequest_5fresponse_5fcommands_2eproto}, {}};

static void InitDefaultsStoreImageResponse_image_5frequest_5fresponse_5fcommands_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ipc_interface::_StoreImageResponse_default_instance_;
    new (ptr) ::ipc_interface::StoreImageResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ipc_interface::StoreImageResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_StoreImageResponse_image_5frequest_5fresponse_5fcommands_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsStoreImageResponse_image_5frequest_5fresponse_5fcommands_2eproto}, {}};

static void InitDefaultsTemplateMatchRequest_image_5frequest_5fresponse_5fcommands_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ipc_interface::_TemplateMatchRequest_default_instance_;
    new (ptr) ::ipc_interface::TemplateMatchRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ipc_interface::TemplateMatchRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_TemplateMatchRequest_image_5frequest_5fresponse_5fcommands_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsTemplateMatchRequest_image_5frequest_5fresponse_5fcommands_2eproto}, {}};

static void InitDefaultsTemplateMatchResponse_image_5frequest_5fresponse_5fcommands_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ipc_interface::_TemplateMatchResponse_default_instance_;
    new (ptr) ::ipc_interface::TemplateMatchResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ipc_interface::TemplateMatchResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_TemplateMatchResponse_image_5frequest_5fresponse_5fcommands_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsTemplateMatchResponse_image_5frequest_5fresponse_5fcommands_2eproto}, {}};

void InitDefaults_image_5frequest_5fresponse_5fcommands_2eproto() {
  ::google::protobuf::internal::InitSCC(&scc_info_StoreImageRequest_image_5frequest_5fresponse_5fcommands_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_StoreImageResponse_image_5frequest_5fresponse_5fcommands_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_TemplateMatchRequest_image_5frequest_5fresponse_5fcommands_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_TemplateMatchResponse_image_5frequest_5fresponse_5fcommands_2eproto.base);
}

::google::protobuf::Metadata file_level_metadata_image_5frequest_5fresponse_5fcommands_2eproto[4];
constexpr ::google::protobuf::EnumDescriptor const** file_level_enum_descriptors_image_5frequest_5fresponse_5fcommands_2eproto = nullptr;
constexpr ::google::protobuf::ServiceDescriptor const** file_level_service_descriptors_image_5frequest_5fresponse_5fcommands_2eproto = nullptr;

const ::google::protobuf::uint32 TableStruct_image_5frequest_5fresponse_5fcommands_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ipc_interface::StoreImageRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ipc_interface::StoreImageRequest, image_name_),
  PROTOBUF_FIELD_OFFSET(::ipc_interface::StoreImageRequest, image_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ipc_interface::StoreImageResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ipc_interface::StoreImageResponse, success_),
  PROTOBUF_FIELD_OFFSET(::ipc_interface::StoreImageResponse, str_message_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ipc_interface::TemplateMatchRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ipc_interface::TemplateMatchRequest, big_image_name_),
  PROTOBUF_FIELD_OFFSET(::ipc_interface::TemplateMatchRequest, template_image_name_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ipc_interface::TemplateMatchResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ipc_interface::TemplateMatchResponse, success_),
  PROTOBUF_FIELD_OFFSET(::ipc_interface::TemplateMatchResponse, x_location_),
  PROTOBUF_FIELD_OFFSET(::ipc_interface::TemplateMatchResponse, y_location_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::ipc_interface::StoreImageRequest)},
  { 7, -1, sizeof(::ipc_interface::StoreImageResponse)},
  { 14, -1, sizeof(::ipc_interface::TemplateMatchRequest)},
  { 21, -1, sizeof(::ipc_interface::TemplateMatchResponse)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::ipc_interface::_StoreImageRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ipc_interface::_StoreImageResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ipc_interface::_TemplateMatchRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ipc_interface::_TemplateMatchResponse_default_instance_),
};

::google::protobuf::internal::AssignDescriptorsTable assign_descriptors_table_image_5frequest_5fresponse_5fcommands_2eproto = {
  {}, AddDescriptors_image_5frequest_5fresponse_5fcommands_2eproto, "image_request_response_commands.proto", schemas,
  file_default_instances, TableStruct_image_5frequest_5fresponse_5fcommands_2eproto::offsets,
  file_level_metadata_image_5frequest_5fresponse_5fcommands_2eproto, 4, file_level_enum_descriptors_image_5frequest_5fresponse_5fcommands_2eproto, file_level_service_descriptors_image_5frequest_5fresponse_5fcommands_2eproto,
};

const char descriptor_table_protodef_image_5frequest_5fresponse_5fcommands_2eproto[] =
  "\n%image_request_response_commands.proto\022"
  "\ripc_interface\"6\n\021StoreImageRequest\022\022\n\ni"
  "mage_name\030\001 \001(\t\022\r\n\005image\030\002 \001(\014\":\n\022StoreI"
  "mageResponse\022\017\n\007success\030\001 \001(\010\022\023\n\013str_mes"
  "sage\030\002 \001(\t\"K\n\024TemplateMatchRequest\022\026\n\016bi"
  "g_image_name\030\001 \001(\t\022\033\n\023template_image_nam"
  "e\030\002 \001(\t\"P\n\025TemplateMatchResponse\022\017\n\007succ"
  "ess\030\001 \001(\010\022\022\n\nx_location\030\002 \001(\005\022\022\n\ny_locat"
  "ion\030\003 \001(\005b\006proto3"
  ;
::google::protobuf::internal::DescriptorTable descriptor_table_image_5frequest_5fresponse_5fcommands_2eproto = {
  false, InitDefaults_image_5frequest_5fresponse_5fcommands_2eproto, 
  descriptor_table_protodef_image_5frequest_5fresponse_5fcommands_2eproto,
  "image_request_response_commands.proto", &assign_descriptors_table_image_5frequest_5fresponse_5fcommands_2eproto, 337,
};

void AddDescriptors_image_5frequest_5fresponse_5fcommands_2eproto() {
  static constexpr ::google::protobuf::internal::InitFunc deps[1] =
  {
  };
 ::google::protobuf::internal::AddDescriptors(&descriptor_table_image_5frequest_5fresponse_5fcommands_2eproto, deps, 0);
}

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_image_5frequest_5fresponse_5fcommands_2eproto = []() { AddDescriptors_image_5frequest_5fresponse_5fcommands_2eproto(); return true; }();
namespace ipc_interface {

// ===================================================================

void StoreImageRequest::InitAsDefaultInstance() {
}
class StoreImageRequest::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int StoreImageRequest::kImageNameFieldNumber;
const int StoreImageRequest::kImageFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

StoreImageRequest::StoreImageRequest()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ipc_interface.StoreImageRequest)
}
StoreImageRequest::StoreImageRequest(const StoreImageRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  image_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.image_name().size() > 0) {
    image_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.image_name_);
  }
  image_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.image().size() > 0) {
    image_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.image_);
  }
  // @@protoc_insertion_point(copy_constructor:ipc_interface.StoreImageRequest)
}

void StoreImageRequest::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_StoreImageRequest_image_5frequest_5fresponse_5fcommands_2eproto.base);
  image_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  image_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

StoreImageRequest::~StoreImageRequest() {
  // @@protoc_insertion_point(destructor:ipc_interface.StoreImageRequest)
  SharedDtor();
}

void StoreImageRequest::SharedDtor() {
  image_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  image_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void StoreImageRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const StoreImageRequest& StoreImageRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_StoreImageRequest_image_5frequest_5fresponse_5fcommands_2eproto.base);
  return *internal_default_instance();
}


void StoreImageRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:ipc_interface.StoreImageRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  image_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  image_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* StoreImageRequest::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<StoreImageRequest*>(object);
  ::google::protobuf::uint32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // string image_name = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::Parse32(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("ipc_interface.StoreImageRequest.image_name");
        auto str = msg->mutable_image_name();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          object = str;
          str->clear();
          str->reserve(size);
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto len_delim_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(str, ptr, size, ctx);
        ptr += size;
        break;
      }
      // bytes image = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::Parse32(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        auto str = msg->mutable_image();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          object = str;
          str->clear();
          str->reserve(size);
          parser_till_end = ::google::protobuf::internal::GreedyStringParser;
          goto len_delim_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheck(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(str, ptr, size, ctx);
        ptr += size;
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool StoreImageRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ipc_interface.StoreImageRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string image_name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_image_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->image_name().data(), static_cast<int>(this->image_name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ipc_interface.StoreImageRequest.image_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes image = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_image()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ipc_interface.StoreImageRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ipc_interface.StoreImageRequest)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void StoreImageRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ipc_interface.StoreImageRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string image_name = 1;
  if (this->image_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->image_name().data(), static_cast<int>(this->image_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ipc_interface.StoreImageRequest.image_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->image_name(), output);
  }

  // bytes image = 2;
  if (this->image().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->image(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ipc_interface.StoreImageRequest)
}

::google::protobuf::uint8* StoreImageRequest::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ipc_interface.StoreImageRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string image_name = 1;
  if (this->image_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->image_name().data(), static_cast<int>(this->image_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ipc_interface.StoreImageRequest.image_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->image_name(), target);
  }

  // bytes image = 2;
  if (this->image().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->image(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ipc_interface.StoreImageRequest)
  return target;
}

size_t StoreImageRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ipc_interface.StoreImageRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string image_name = 1;
  if (this->image_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->image_name());
  }

  // bytes image = 2;
  if (this->image().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->image());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void StoreImageRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ipc_interface.StoreImageRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const StoreImageRequest* source =
      ::google::protobuf::DynamicCastToGenerated<StoreImageRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ipc_interface.StoreImageRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ipc_interface.StoreImageRequest)
    MergeFrom(*source);
  }
}

void StoreImageRequest::MergeFrom(const StoreImageRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ipc_interface.StoreImageRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.image_name().size() > 0) {

    image_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.image_name_);
  }
  if (from.image().size() > 0) {

    image_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.image_);
  }
}

void StoreImageRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ipc_interface.StoreImageRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void StoreImageRequest::CopyFrom(const StoreImageRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ipc_interface.StoreImageRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool StoreImageRequest::IsInitialized() const {
  return true;
}

void StoreImageRequest::Swap(StoreImageRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void StoreImageRequest::InternalSwap(StoreImageRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  image_name_.Swap(&other->image_name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  image_.Swap(&other->image_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
}

::google::protobuf::Metadata StoreImageRequest::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_image_5frequest_5fresponse_5fcommands_2eproto);
  return ::file_level_metadata_image_5frequest_5fresponse_5fcommands_2eproto[kIndexInFileMessages];
}


// ===================================================================

void StoreImageResponse::InitAsDefaultInstance() {
}
class StoreImageResponse::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int StoreImageResponse::kSuccessFieldNumber;
const int StoreImageResponse::kStrMessageFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

StoreImageResponse::StoreImageResponse()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ipc_interface.StoreImageResponse)
}
StoreImageResponse::StoreImageResponse(const StoreImageResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  str_message_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.str_message().size() > 0) {
    str_message_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.str_message_);
  }
  success_ = from.success_;
  // @@protoc_insertion_point(copy_constructor:ipc_interface.StoreImageResponse)
}

void StoreImageResponse::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_StoreImageResponse_image_5frequest_5fresponse_5fcommands_2eproto.base);
  str_message_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  success_ = false;
}

StoreImageResponse::~StoreImageResponse() {
  // @@protoc_insertion_point(destructor:ipc_interface.StoreImageResponse)
  SharedDtor();
}

void StoreImageResponse::SharedDtor() {
  str_message_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void StoreImageResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const StoreImageResponse& StoreImageResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_StoreImageResponse_image_5frequest_5fresponse_5fcommands_2eproto.base);
  return *internal_default_instance();
}


void StoreImageResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:ipc_interface.StoreImageResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  str_message_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  success_ = false;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* StoreImageResponse::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<StoreImageResponse*>(object);
  ::google::protobuf::uint32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // bool success = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        ::google::protobuf::uint64 val;
        ptr = ::google::protobuf::io::Parse64(ptr, &val);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        bool value = val;
        msg->set_success(value);
        break;
      }
      // string str_message = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::Parse32(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("ipc_interface.StoreImageResponse.str_message");
        auto str = msg->mutable_str_message();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          object = str;
          str->clear();
          str->reserve(size);
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto len_delim_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(str, ptr, size, ctx);
        ptr += size;
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool StoreImageResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ipc_interface.StoreImageResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bool success = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &success_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string str_message = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_str_message()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->str_message().data(), static_cast<int>(this->str_message().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ipc_interface.StoreImageResponse.str_message"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ipc_interface.StoreImageResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ipc_interface.StoreImageResponse)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void StoreImageResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ipc_interface.StoreImageResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool success = 1;
  if (this->success() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->success(), output);
  }

  // string str_message = 2;
  if (this->str_message().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->str_message().data(), static_cast<int>(this->str_message().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ipc_interface.StoreImageResponse.str_message");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->str_message(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ipc_interface.StoreImageResponse)
}

::google::protobuf::uint8* StoreImageResponse::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ipc_interface.StoreImageResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool success = 1;
  if (this->success() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->success(), target);
  }

  // string str_message = 2;
  if (this->str_message().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->str_message().data(), static_cast<int>(this->str_message().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ipc_interface.StoreImageResponse.str_message");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->str_message(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ipc_interface.StoreImageResponse)
  return target;
}

size_t StoreImageResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ipc_interface.StoreImageResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string str_message = 2;
  if (this->str_message().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->str_message());
  }

  // bool success = 1;
  if (this->success() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void StoreImageResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ipc_interface.StoreImageResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const StoreImageResponse* source =
      ::google::protobuf::DynamicCastToGenerated<StoreImageResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ipc_interface.StoreImageResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ipc_interface.StoreImageResponse)
    MergeFrom(*source);
  }
}

void StoreImageResponse::MergeFrom(const StoreImageResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ipc_interface.StoreImageResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.str_message().size() > 0) {

    str_message_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.str_message_);
  }
  if (from.success() != 0) {
    set_success(from.success());
  }
}

void StoreImageResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ipc_interface.StoreImageResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void StoreImageResponse::CopyFrom(const StoreImageResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ipc_interface.StoreImageResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool StoreImageResponse::IsInitialized() const {
  return true;
}

void StoreImageResponse::Swap(StoreImageResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void StoreImageResponse::InternalSwap(StoreImageResponse* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  str_message_.Swap(&other->str_message_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(success_, other->success_);
}

::google::protobuf::Metadata StoreImageResponse::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_image_5frequest_5fresponse_5fcommands_2eproto);
  return ::file_level_metadata_image_5frequest_5fresponse_5fcommands_2eproto[kIndexInFileMessages];
}


// ===================================================================

void TemplateMatchRequest::InitAsDefaultInstance() {
}
class TemplateMatchRequest::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TemplateMatchRequest::kBigImageNameFieldNumber;
const int TemplateMatchRequest::kTemplateImageNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TemplateMatchRequest::TemplateMatchRequest()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ipc_interface.TemplateMatchRequest)
}
TemplateMatchRequest::TemplateMatchRequest(const TemplateMatchRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  big_image_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.big_image_name().size() > 0) {
    big_image_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.big_image_name_);
  }
  template_image_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.template_image_name().size() > 0) {
    template_image_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.template_image_name_);
  }
  // @@protoc_insertion_point(copy_constructor:ipc_interface.TemplateMatchRequest)
}

void TemplateMatchRequest::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_TemplateMatchRequest_image_5frequest_5fresponse_5fcommands_2eproto.base);
  big_image_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  template_image_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

TemplateMatchRequest::~TemplateMatchRequest() {
  // @@protoc_insertion_point(destructor:ipc_interface.TemplateMatchRequest)
  SharedDtor();
}

void TemplateMatchRequest::SharedDtor() {
  big_image_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  template_image_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void TemplateMatchRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const TemplateMatchRequest& TemplateMatchRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_TemplateMatchRequest_image_5frequest_5fresponse_5fcommands_2eproto.base);
  return *internal_default_instance();
}


void TemplateMatchRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:ipc_interface.TemplateMatchRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  big_image_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  template_image_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* TemplateMatchRequest::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<TemplateMatchRequest*>(object);
  ::google::protobuf::uint32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // string big_image_name = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::Parse32(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("ipc_interface.TemplateMatchRequest.big_image_name");
        auto str = msg->mutable_big_image_name();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          object = str;
          str->clear();
          str->reserve(size);
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto len_delim_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(str, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string template_image_name = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::Parse32(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("ipc_interface.TemplateMatchRequest.template_image_name");
        auto str = msg->mutable_template_image_name();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          object = str;
          str->clear();
          str->reserve(size);
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto len_delim_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(str, ptr, size, ctx);
        ptr += size;
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool TemplateMatchRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ipc_interface.TemplateMatchRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string big_image_name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_big_image_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->big_image_name().data(), static_cast<int>(this->big_image_name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ipc_interface.TemplateMatchRequest.big_image_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string template_image_name = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_template_image_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->template_image_name().data(), static_cast<int>(this->template_image_name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ipc_interface.TemplateMatchRequest.template_image_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ipc_interface.TemplateMatchRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ipc_interface.TemplateMatchRequest)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void TemplateMatchRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ipc_interface.TemplateMatchRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string big_image_name = 1;
  if (this->big_image_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->big_image_name().data(), static_cast<int>(this->big_image_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ipc_interface.TemplateMatchRequest.big_image_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->big_image_name(), output);
  }

  // string template_image_name = 2;
  if (this->template_image_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->template_image_name().data(), static_cast<int>(this->template_image_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ipc_interface.TemplateMatchRequest.template_image_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->template_image_name(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ipc_interface.TemplateMatchRequest)
}

::google::protobuf::uint8* TemplateMatchRequest::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ipc_interface.TemplateMatchRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string big_image_name = 1;
  if (this->big_image_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->big_image_name().data(), static_cast<int>(this->big_image_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ipc_interface.TemplateMatchRequest.big_image_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->big_image_name(), target);
  }

  // string template_image_name = 2;
  if (this->template_image_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->template_image_name().data(), static_cast<int>(this->template_image_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ipc_interface.TemplateMatchRequest.template_image_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->template_image_name(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ipc_interface.TemplateMatchRequest)
  return target;
}

size_t TemplateMatchRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ipc_interface.TemplateMatchRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string big_image_name = 1;
  if (this->big_image_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->big_image_name());
  }

  // string template_image_name = 2;
  if (this->template_image_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->template_image_name());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void TemplateMatchRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ipc_interface.TemplateMatchRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const TemplateMatchRequest* source =
      ::google::protobuf::DynamicCastToGenerated<TemplateMatchRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ipc_interface.TemplateMatchRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ipc_interface.TemplateMatchRequest)
    MergeFrom(*source);
  }
}

void TemplateMatchRequest::MergeFrom(const TemplateMatchRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ipc_interface.TemplateMatchRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.big_image_name().size() > 0) {

    big_image_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.big_image_name_);
  }
  if (from.template_image_name().size() > 0) {

    template_image_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.template_image_name_);
  }
}

void TemplateMatchRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ipc_interface.TemplateMatchRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TemplateMatchRequest::CopyFrom(const TemplateMatchRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ipc_interface.TemplateMatchRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TemplateMatchRequest::IsInitialized() const {
  return true;
}

void TemplateMatchRequest::Swap(TemplateMatchRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TemplateMatchRequest::InternalSwap(TemplateMatchRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  big_image_name_.Swap(&other->big_image_name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  template_image_name_.Swap(&other->template_image_name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
}

::google::protobuf::Metadata TemplateMatchRequest::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_image_5frequest_5fresponse_5fcommands_2eproto);
  return ::file_level_metadata_image_5frequest_5fresponse_5fcommands_2eproto[kIndexInFileMessages];
}


// ===================================================================

void TemplateMatchResponse::InitAsDefaultInstance() {
}
class TemplateMatchResponse::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TemplateMatchResponse::kSuccessFieldNumber;
const int TemplateMatchResponse::kXLocationFieldNumber;
const int TemplateMatchResponse::kYLocationFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TemplateMatchResponse::TemplateMatchResponse()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ipc_interface.TemplateMatchResponse)
}
TemplateMatchResponse::TemplateMatchResponse(const TemplateMatchResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&success_, &from.success_,
    static_cast<size_t>(reinterpret_cast<char*>(&y_location_) -
    reinterpret_cast<char*>(&success_)) + sizeof(y_location_));
  // @@protoc_insertion_point(copy_constructor:ipc_interface.TemplateMatchResponse)
}

void TemplateMatchResponse::SharedCtor() {
  ::memset(&success_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&y_location_) -
      reinterpret_cast<char*>(&success_)) + sizeof(y_location_));
}

TemplateMatchResponse::~TemplateMatchResponse() {
  // @@protoc_insertion_point(destructor:ipc_interface.TemplateMatchResponse)
  SharedDtor();
}

void TemplateMatchResponse::SharedDtor() {
}

void TemplateMatchResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const TemplateMatchResponse& TemplateMatchResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_TemplateMatchResponse_image_5frequest_5fresponse_5fcommands_2eproto.base);
  return *internal_default_instance();
}


void TemplateMatchResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:ipc_interface.TemplateMatchResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&success_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&y_location_) -
      reinterpret_cast<char*>(&success_)) + sizeof(y_location_));
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* TemplateMatchResponse::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<TemplateMatchResponse*>(object);
  ::google::protobuf::uint32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // bool success = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        ::google::protobuf::uint64 val;
        ptr = ::google::protobuf::io::Parse64(ptr, &val);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        bool value = val;
        msg->set_success(value);
        break;
      }
      // int32 x_location = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 16) goto handle_unusual;
        ::google::protobuf::uint64 val;
        ptr = ::google::protobuf::io::Parse64(ptr, &val);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ::google::protobuf::int32 value = val;
        msg->set_x_location(value);
        break;
      }
      // int32 y_location = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 24) goto handle_unusual;
        ::google::protobuf::uint64 val;
        ptr = ::google::protobuf::io::Parse64(ptr, &val);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ::google::protobuf::int32 value = val;
        msg->set_y_location(value);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool TemplateMatchResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ipc_interface.TemplateMatchResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bool success = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &success_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 x_location = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (16 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &x_location_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 y_location = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (24 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &y_location_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ipc_interface.TemplateMatchResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ipc_interface.TemplateMatchResponse)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void TemplateMatchResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ipc_interface.TemplateMatchResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool success = 1;
  if (this->success() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->success(), output);
  }

  // int32 x_location = 2;
  if (this->x_location() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->x_location(), output);
  }

  // int32 y_location = 3;
  if (this->y_location() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->y_location(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ipc_interface.TemplateMatchResponse)
}

::google::protobuf::uint8* TemplateMatchResponse::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ipc_interface.TemplateMatchResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool success = 1;
  if (this->success() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->success(), target);
  }

  // int32 x_location = 2;
  if (this->x_location() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->x_location(), target);
  }

  // int32 y_location = 3;
  if (this->y_location() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->y_location(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ipc_interface.TemplateMatchResponse)
  return target;
}

size_t TemplateMatchResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ipc_interface.TemplateMatchResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bool success = 1;
  if (this->success() != 0) {
    total_size += 1 + 1;
  }

  // int32 x_location = 2;
  if (this->x_location() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->x_location());
  }

  // int32 y_location = 3;
  if (this->y_location() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->y_location());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void TemplateMatchResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ipc_interface.TemplateMatchResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const TemplateMatchResponse* source =
      ::google::protobuf::DynamicCastToGenerated<TemplateMatchResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ipc_interface.TemplateMatchResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ipc_interface.TemplateMatchResponse)
    MergeFrom(*source);
  }
}

void TemplateMatchResponse::MergeFrom(const TemplateMatchResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ipc_interface.TemplateMatchResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.success() != 0) {
    set_success(from.success());
  }
  if (from.x_location() != 0) {
    set_x_location(from.x_location());
  }
  if (from.y_location() != 0) {
    set_y_location(from.y_location());
  }
}

void TemplateMatchResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ipc_interface.TemplateMatchResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TemplateMatchResponse::CopyFrom(const TemplateMatchResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ipc_interface.TemplateMatchResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TemplateMatchResponse::IsInitialized() const {
  return true;
}

void TemplateMatchResponse::Swap(TemplateMatchResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TemplateMatchResponse::InternalSwap(TemplateMatchResponse* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(success_, other->success_);
  swap(x_location_, other->x_location_);
  swap(y_location_, other->y_location_);
}

::google::protobuf::Metadata TemplateMatchResponse::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_image_5frequest_5fresponse_5fcommands_2eproto);
  return ::file_level_metadata_image_5frequest_5fresponse_5fcommands_2eproto[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace ipc_interface
namespace google {
namespace protobuf {
template<> PROTOBUF_NOINLINE ::ipc_interface::StoreImageRequest* Arena::CreateMaybeMessage< ::ipc_interface::StoreImageRequest >(Arena* arena) {
  return Arena::CreateInternal< ::ipc_interface::StoreImageRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::ipc_interface::StoreImageResponse* Arena::CreateMaybeMessage< ::ipc_interface::StoreImageResponse >(Arena* arena) {
  return Arena::CreateInternal< ::ipc_interface::StoreImageResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::ipc_interface::TemplateMatchRequest* Arena::CreateMaybeMessage< ::ipc_interface::TemplateMatchRequest >(Arena* arena) {
  return Arena::CreateInternal< ::ipc_interface::TemplateMatchRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::ipc_interface::TemplateMatchResponse* Arena::CreateMaybeMessage< ::ipc_interface::TemplateMatchResponse >(Arena* arena) {
  return Arena::CreateInternal< ::ipc_interface::TemplateMatchResponse >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
