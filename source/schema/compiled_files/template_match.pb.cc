// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: template_match.proto

#include "template_match.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

class ImageRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ImageRequest>
      _instance;
} _ImageRequest_default_instance_;
class ImageResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ImageResponse>
      _instance;
} _ImageResponse_default_instance_;
namespace protobuf_template_5fmatch_2eproto {
static void InitDefaultsImageRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_ImageRequest_default_instance_;
    new (ptr) ::ImageRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ImageRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ImageRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsImageRequest}, {}};

static void InitDefaultsImageResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_ImageResponse_default_instance_;
    new (ptr) ::ImageResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ImageResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ImageResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsImageResponse}, {}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_ImageRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ImageResponse.base);
}

::google::protobuf::Metadata file_level_metadata[2];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ImageRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ImageRequest, image_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ImageRequest, image_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ImageResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ImageResponse, success_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ImageResponse, str_message_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::ImageRequest)},
  { 7, -1, sizeof(::ImageResponse)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::_ImageRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_ImageResponse_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "template_match.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 2);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\024template_match.proto\"1\n\014ImageRequest\022\022"
      "\n\nimage_name\030\001 \001(\t\022\r\n\005image\030\002 \001(\014\"5\n\rIma"
      "geResponse\022\017\n\007success\030\001 \001(\010\022\023\n\013str_messa"
      "ge\030\002 \001(\tb\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 136);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "template_match.proto", &protobuf_RegisterTypes);
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_template_5fmatch_2eproto

// ===================================================================

void ImageRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ImageRequest::kImageNameFieldNumber;
const int ImageRequest::kImageFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ImageRequest::ImageRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_template_5fmatch_2eproto::scc_info_ImageRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:ImageRequest)
}
ImageRequest::ImageRequest(const ImageRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  image_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.image_name().size() > 0) {
    image_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.image_name_);
  }
  image_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.image().size() > 0) {
    image_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.image_);
  }
  // @@protoc_insertion_point(copy_constructor:ImageRequest)
}

void ImageRequest::SharedCtor() {
  image_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  image_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

ImageRequest::~ImageRequest() {
  // @@protoc_insertion_point(destructor:ImageRequest)
  SharedDtor();
}

void ImageRequest::SharedDtor() {
  image_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  image_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ImageRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ImageRequest::descriptor() {
  ::protobuf_template_5fmatch_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_template_5fmatch_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ImageRequest& ImageRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_template_5fmatch_2eproto::scc_info_ImageRequest.base);
  return *internal_default_instance();
}


void ImageRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:ImageRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  image_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  image_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool ImageRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ImageRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string image_name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_image_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->image_name().data(), static_cast<int>(this->image_name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ImageRequest.image_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes image = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_image()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ImageRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ImageRequest)
  return false;
#undef DO_
}

void ImageRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ImageRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string image_name = 1;
  if (this->image_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->image_name().data(), static_cast<int>(this->image_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ImageRequest.image_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->image_name(), output);
  }

  // bytes image = 2;
  if (this->image().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->image(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ImageRequest)
}

::google::protobuf::uint8* ImageRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ImageRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string image_name = 1;
  if (this->image_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->image_name().data(), static_cast<int>(this->image_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ImageRequest.image_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->image_name(), target);
  }

  // bytes image = 2;
  if (this->image().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->image(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ImageRequest)
  return target;
}

size_t ImageRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ImageRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string image_name = 1;
  if (this->image_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->image_name());
  }

  // bytes image = 2;
  if (this->image().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->image());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ImageRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ImageRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const ImageRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ImageRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ImageRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ImageRequest)
    MergeFrom(*source);
  }
}

void ImageRequest::MergeFrom(const ImageRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ImageRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.image_name().size() > 0) {

    image_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.image_name_);
  }
  if (from.image().size() > 0) {

    image_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.image_);
  }
}

void ImageRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ImageRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ImageRequest::CopyFrom(const ImageRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ImageRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ImageRequest::IsInitialized() const {
  return true;
}

void ImageRequest::Swap(ImageRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ImageRequest::InternalSwap(ImageRequest* other) {
  using std::swap;
  image_name_.Swap(&other->image_name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  image_.Swap(&other->image_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ImageRequest::GetMetadata() const {
  protobuf_template_5fmatch_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_template_5fmatch_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ImageResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ImageResponse::kSuccessFieldNumber;
const int ImageResponse::kStrMessageFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ImageResponse::ImageResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_template_5fmatch_2eproto::scc_info_ImageResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:ImageResponse)
}
ImageResponse::ImageResponse(const ImageResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  str_message_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.str_message().size() > 0) {
    str_message_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.str_message_);
  }
  success_ = from.success_;
  // @@protoc_insertion_point(copy_constructor:ImageResponse)
}

void ImageResponse::SharedCtor() {
  str_message_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  success_ = false;
}

ImageResponse::~ImageResponse() {
  // @@protoc_insertion_point(destructor:ImageResponse)
  SharedDtor();
}

void ImageResponse::SharedDtor() {
  str_message_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ImageResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ImageResponse::descriptor() {
  ::protobuf_template_5fmatch_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_template_5fmatch_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ImageResponse& ImageResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_template_5fmatch_2eproto::scc_info_ImageResponse.base);
  return *internal_default_instance();
}


void ImageResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:ImageResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  str_message_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  success_ = false;
  _internal_metadata_.Clear();
}

bool ImageResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ImageResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bool success = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &success_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string str_message = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_str_message()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->str_message().data(), static_cast<int>(this->str_message().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ImageResponse.str_message"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ImageResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ImageResponse)
  return false;
#undef DO_
}

void ImageResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ImageResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool success = 1;
  if (this->success() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->success(), output);
  }

  // string str_message = 2;
  if (this->str_message().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->str_message().data(), static_cast<int>(this->str_message().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ImageResponse.str_message");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->str_message(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ImageResponse)
}

::google::protobuf::uint8* ImageResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ImageResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool success = 1;
  if (this->success() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->success(), target);
  }

  // string str_message = 2;
  if (this->str_message().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->str_message().data(), static_cast<int>(this->str_message().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ImageResponse.str_message");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->str_message(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ImageResponse)
  return target;
}

size_t ImageResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ImageResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string str_message = 2;
  if (this->str_message().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->str_message());
  }

  // bool success = 1;
  if (this->success() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ImageResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ImageResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const ImageResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ImageResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ImageResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ImageResponse)
    MergeFrom(*source);
  }
}

void ImageResponse::MergeFrom(const ImageResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ImageResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.str_message().size() > 0) {

    str_message_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.str_message_);
  }
  if (from.success() != 0) {
    set_success(from.success());
  }
}

void ImageResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ImageResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ImageResponse::CopyFrom(const ImageResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ImageResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ImageResponse::IsInitialized() const {
  return true;
}

void ImageResponse::Swap(ImageResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ImageResponse::InternalSwap(ImageResponse* other) {
  using std::swap;
  str_message_.Swap(&other->str_message_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(success_, other->success_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ImageResponse::GetMetadata() const {
  protobuf_template_5fmatch_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_template_5fmatch_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::ImageRequest* Arena::CreateMaybeMessage< ::ImageRequest >(Arena* arena) {
  return Arena::CreateInternal< ::ImageRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::ImageResponse* Arena::CreateMaybeMessage< ::ImageResponse >(Arena* arena) {
  return Arena::CreateInternal< ::ImageResponse >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
