// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: template_match.proto

#include "template_match.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace ipc_interface {
class StoreImageRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<StoreImageRequest>
      _instance;
} _StoreImageRequest_default_instance_;
class StoreImageResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<StoreImageResponse>
      _instance;
} _StoreImageResponse_default_instance_;
}  // namespace ipc_interface
namespace protobuf_template_5fmatch_2eproto {
static void InitDefaultsStoreImageRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ipc_interface::_StoreImageRequest_default_instance_;
    new (ptr) ::ipc_interface::StoreImageRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ipc_interface::StoreImageRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_StoreImageRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsStoreImageRequest}, {}};

static void InitDefaultsStoreImageResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ipc_interface::_StoreImageResponse_default_instance_;
    new (ptr) ::ipc_interface::StoreImageResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ipc_interface::StoreImageResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_StoreImageResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsStoreImageResponse}, {}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_StoreImageRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_StoreImageResponse.base);
}

::google::protobuf::Metadata file_level_metadata[2];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ipc_interface::StoreImageRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ipc_interface::StoreImageRequest, image_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ipc_interface::StoreImageRequest, image_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ipc_interface::StoreImageResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ipc_interface::StoreImageResponse, success_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ipc_interface::StoreImageResponse, str_message_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::ipc_interface::StoreImageRequest)},
  { 7, -1, sizeof(::ipc_interface::StoreImageResponse)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::ipc_interface::_StoreImageRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ipc_interface::_StoreImageResponse_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "template_match.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 2);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\024template_match.proto\022\ripc_interface\"6\n"
      "\021StoreImageRequest\022\022\n\nimage_name\030\001 \001(\t\022\r"
      "\n\005image\030\002 \001(\014\":\n\022StoreImageResponse\022\017\n\007s"
      "uccess\030\001 \001(\010\022\023\n\013str_message\030\002 \001(\tb\006proto"
      "3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 161);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "template_match.proto", &protobuf_RegisterTypes);
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_template_5fmatch_2eproto
namespace ipc_interface {

// ===================================================================

void StoreImageRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int StoreImageRequest::kImageNameFieldNumber;
const int StoreImageRequest::kImageFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

StoreImageRequest::StoreImageRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_template_5fmatch_2eproto::scc_info_StoreImageRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:ipc_interface.StoreImageRequest)
}
StoreImageRequest::StoreImageRequest(const StoreImageRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  image_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.image_name().size() > 0) {
    image_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.image_name_);
  }
  image_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.image().size() > 0) {
    image_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.image_);
  }
  // @@protoc_insertion_point(copy_constructor:ipc_interface.StoreImageRequest)
}

void StoreImageRequest::SharedCtor() {
  image_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  image_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

StoreImageRequest::~StoreImageRequest() {
  // @@protoc_insertion_point(destructor:ipc_interface.StoreImageRequest)
  SharedDtor();
}

void StoreImageRequest::SharedDtor() {
  image_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  image_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void StoreImageRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* StoreImageRequest::descriptor() {
  ::protobuf_template_5fmatch_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_template_5fmatch_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const StoreImageRequest& StoreImageRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_template_5fmatch_2eproto::scc_info_StoreImageRequest.base);
  return *internal_default_instance();
}


void StoreImageRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:ipc_interface.StoreImageRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  image_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  image_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool StoreImageRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ipc_interface.StoreImageRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string image_name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_image_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->image_name().data(), static_cast<int>(this->image_name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ipc_interface.StoreImageRequest.image_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes image = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_image()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ipc_interface.StoreImageRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ipc_interface.StoreImageRequest)
  return false;
#undef DO_
}

void StoreImageRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ipc_interface.StoreImageRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string image_name = 1;
  if (this->image_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->image_name().data(), static_cast<int>(this->image_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ipc_interface.StoreImageRequest.image_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->image_name(), output);
  }

  // bytes image = 2;
  if (this->image().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->image(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ipc_interface.StoreImageRequest)
}

::google::protobuf::uint8* StoreImageRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ipc_interface.StoreImageRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string image_name = 1;
  if (this->image_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->image_name().data(), static_cast<int>(this->image_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ipc_interface.StoreImageRequest.image_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->image_name(), target);
  }

  // bytes image = 2;
  if (this->image().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->image(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ipc_interface.StoreImageRequest)
  return target;
}

size_t StoreImageRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ipc_interface.StoreImageRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string image_name = 1;
  if (this->image_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->image_name());
  }

  // bytes image = 2;
  if (this->image().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->image());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void StoreImageRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ipc_interface.StoreImageRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const StoreImageRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const StoreImageRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ipc_interface.StoreImageRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ipc_interface.StoreImageRequest)
    MergeFrom(*source);
  }
}

void StoreImageRequest::MergeFrom(const StoreImageRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ipc_interface.StoreImageRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.image_name().size() > 0) {

    image_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.image_name_);
  }
  if (from.image().size() > 0) {

    image_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.image_);
  }
}

void StoreImageRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ipc_interface.StoreImageRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void StoreImageRequest::CopyFrom(const StoreImageRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ipc_interface.StoreImageRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool StoreImageRequest::IsInitialized() const {
  return true;
}

void StoreImageRequest::Swap(StoreImageRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void StoreImageRequest::InternalSwap(StoreImageRequest* other) {
  using std::swap;
  image_name_.Swap(&other->image_name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  image_.Swap(&other->image_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata StoreImageRequest::GetMetadata() const {
  protobuf_template_5fmatch_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_template_5fmatch_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void StoreImageResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int StoreImageResponse::kSuccessFieldNumber;
const int StoreImageResponse::kStrMessageFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

StoreImageResponse::StoreImageResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_template_5fmatch_2eproto::scc_info_StoreImageResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:ipc_interface.StoreImageResponse)
}
StoreImageResponse::StoreImageResponse(const StoreImageResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  str_message_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.str_message().size() > 0) {
    str_message_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.str_message_);
  }
  success_ = from.success_;
  // @@protoc_insertion_point(copy_constructor:ipc_interface.StoreImageResponse)
}

void StoreImageResponse::SharedCtor() {
  str_message_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  success_ = false;
}

StoreImageResponse::~StoreImageResponse() {
  // @@protoc_insertion_point(destructor:ipc_interface.StoreImageResponse)
  SharedDtor();
}

void StoreImageResponse::SharedDtor() {
  str_message_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void StoreImageResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* StoreImageResponse::descriptor() {
  ::protobuf_template_5fmatch_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_template_5fmatch_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const StoreImageResponse& StoreImageResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_template_5fmatch_2eproto::scc_info_StoreImageResponse.base);
  return *internal_default_instance();
}


void StoreImageResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:ipc_interface.StoreImageResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  str_message_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  success_ = false;
  _internal_metadata_.Clear();
}

bool StoreImageResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ipc_interface.StoreImageResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bool success = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &success_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string str_message = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_str_message()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->str_message().data(), static_cast<int>(this->str_message().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ipc_interface.StoreImageResponse.str_message"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ipc_interface.StoreImageResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ipc_interface.StoreImageResponse)
  return false;
#undef DO_
}

void StoreImageResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ipc_interface.StoreImageResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool success = 1;
  if (this->success() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->success(), output);
  }

  // string str_message = 2;
  if (this->str_message().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->str_message().data(), static_cast<int>(this->str_message().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ipc_interface.StoreImageResponse.str_message");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->str_message(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ipc_interface.StoreImageResponse)
}

::google::protobuf::uint8* StoreImageResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ipc_interface.StoreImageResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool success = 1;
  if (this->success() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->success(), target);
  }

  // string str_message = 2;
  if (this->str_message().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->str_message().data(), static_cast<int>(this->str_message().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ipc_interface.StoreImageResponse.str_message");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->str_message(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ipc_interface.StoreImageResponse)
  return target;
}

size_t StoreImageResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ipc_interface.StoreImageResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string str_message = 2;
  if (this->str_message().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->str_message());
  }

  // bool success = 1;
  if (this->success() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void StoreImageResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ipc_interface.StoreImageResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const StoreImageResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const StoreImageResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ipc_interface.StoreImageResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ipc_interface.StoreImageResponse)
    MergeFrom(*source);
  }
}

void StoreImageResponse::MergeFrom(const StoreImageResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ipc_interface.StoreImageResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.str_message().size() > 0) {

    str_message_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.str_message_);
  }
  if (from.success() != 0) {
    set_success(from.success());
  }
}

void StoreImageResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ipc_interface.StoreImageResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void StoreImageResponse::CopyFrom(const StoreImageResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ipc_interface.StoreImageResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool StoreImageResponse::IsInitialized() const {
  return true;
}

void StoreImageResponse::Swap(StoreImageResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void StoreImageResponse::InternalSwap(StoreImageResponse* other) {
  using std::swap;
  str_message_.Swap(&other->str_message_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(success_, other->success_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata StoreImageResponse::GetMetadata() const {
  protobuf_template_5fmatch_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_template_5fmatch_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace ipc_interface
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::ipc_interface::StoreImageRequest* Arena::CreateMaybeMessage< ::ipc_interface::StoreImageRequest >(Arena* arena) {
  return Arena::CreateInternal< ::ipc_interface::StoreImageRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::ipc_interface::StoreImageResponse* Arena::CreateMaybeMessage< ::ipc_interface::StoreImageResponse >(Arena* arena) {
  return Arena::CreateInternal< ::ipc_interface::StoreImageResponse >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
